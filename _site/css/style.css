/**
 * Using SASS for CSS preprocessing
 * http://sass-lang.com/
 */
/**
 * CSS reset
 */
html, body, div, span, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, abbr, address, cite, code, del, dfn, em, img, ins, kbd, q, samp, small, strong, sub, sup, var, b, i, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, figcaption, figure, footer, header, hgroup, menu, nav, section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent; }

body {
  line-height: 1; }

article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section {
  display: block; }

nav ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after, q:before, q:after {
  content: none; }

a {
  margin: 0;
  padding: 0;
  font-size: 100%;
  vertical-align: baseline;
  background: transparent; }

ins {
  background-color: #ff9;
  color: #000;
  text-decoration: none; }

mark {
  background-color: #ff9;
  color: #000;
  font-style: italic;
  font-weight: bold; }

del {
  text-decoration: line-through; }

abbr[title], dfn[title] {
  border-bottom: 1px dotted;
  cursor: help; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0; }

input, select {
  vertical-align: middle; }

/*  Syntax Quick Reference
  --------------------------
  column($ratios: 1, $offset: 0, $cycle: 0, $uncycle: 0, $gutter: $jeet-gutter)
  span($ratio: 1, $offset: 0)
  shift($ratios: 0, $col_or_span: column, $gutter: $jeet-gutter)
  unshift()
  edit()
  center($max_width: 1410px, $pad: 0)
  stack($pad: 0, $align: false)
  unstack()
  align($direction: both)
  cf()
*/
/**
 * Grid settings.
 * All values are defaults and can therefore be easily overidden.
 */
/**
 * List functions courtesy of the wonderful folks at Team Sass.
 * Check out their awesome grid: Singularity.
 */
/**
 * Get  percentage from a given ratio.
 * @param {number} [$ratio=1] - The column ratio of the element.
 * @returns {number} - The percentage value.
 */
/**
 * Work out the column widths based on the ratio and gutter sizes.
 * @param {number} [$ratios=1] - The column ratio of the element.
 * @param {number} [$gutter=$jeet-gutter] - The gutter for the column.
 * @returns {list} $width $gutter - A list containing the with and gutter for the element.
 */
/**
 * Get the set layout direction for the project.
 * @returns {string} $direction - The layout direction.
 */
/**
 * Replace a specified list value with a new value (uses built in set-nth() if available)
 * @param {list} $list - The list of values you want to alter.
 * @param {number} $index - The index of the list item you want to replace.
 * @param {*} $value - The value you want to replace $index with.
 * @returns {list} $list - The list with the value replaced or removed.
 * @warn if an invalid index is supplied.
 */
/**
 * Reverse a list (progressively enhanced for Sass 3.3)
 * @param {list} $list - The list of values you want to reverse.
 * @returns {list} $result - The reversed list.
 */
/**
 * Get the opposite direction to a given value.
 * @param {string} $dir - The direction you want the opposite of.
 * @returns {string} - The opposite direction to $dir.
 * @warn if an incorrect string is provided.
 */
/**
 * Perform a value into a percentage value.
 * @param {number} $value - The value which should be converted.
 * @returns {number} $value - The percentage.
 */
/**
 * Style an element as a column with a gutter.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$offset=0] - A offset specified as a fraction (see $ratios).
 * @param {number} [$cycle=0] - Easily create an nth column grid where $cycle equals the number of columns.
 * @param {number} [$uncycle=0] - Undo a previous cycle value to allow for a new one.
 * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * Aliases for j-column().
 */
/**
 * Get the width of a column and nothing else.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * Aliases for j-column-width().
 */
/**
 * Get the gutter size of a column and nothing else.
 * @param {number} [ratios=1] - A width relative to its container as a fraction.
 * @param {number} [gutter=jeet.gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * Alias for j-column-gutter().
 */
/**
 * Style an element as a column without any gutters for a seamless row.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$offset=0] - A offset specified as a fraction (see $ratios).
 * @param {number} [cycle=0] - Easily create an nth column grid where cycle equals the number of columns.
 * @param {number} [uncycle=0] - Undo a previous cycle value to allow for a new one.
 */
/**
 * Alias for j-span().
 */
/**
 * Reorder columns without altering the HTML.
 * @param {number} [$ratios=0] - Specify how far along you want the element to move.
 * @param {string} [$col-or-span=column] - Specify whether the element has a gutter or not.
 * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * Alias for j-shift().
 */
/**
 * Reset an element that has had shift() applied to it.
 */
/**
 * Alias for j-unshift().
 */
/**
 * View the grid and its layers for easy debugging.
 * @param {string} [$color=black] - The background tint applied.
 * @param {boolean} [$important=false] - Whether to apply the style as !important.
 */
/**
 * Aliases for j-edit().
 */
/**
 * Horizontally center an element.
 * @param {number} [$max-width=1410px] - The max width the element can be.
 * @param {number} [$pad=0] - Specify the element's left and right padding.
 */
/**
 * Alias for j-center().
 */
/**
 * Uncenter an element.
 */
/**
 * Alias for j-uncenter().
 */
/**
 * Stack an element so that nothing is either side of it.
 * @param {number} [$pad=0] - Specify the element's left and right padding.
 * @param {boolean/string} [$align=false] - Specify the text align for the element.
 */
/**
 * Alias for j-stack().
 */
/**
 * Unstack an element.
 */
/**
 * Alias for j-unstack().
 */
/**
 * Center an element on either or both axes.
 * @requires A parent container with relative positioning.
 * @param {string} [$direction=both] - Specify which axes to center the element on.
 */
/**
 * Alias for j-align().
 */
/**
 * Apply a clearfix to an element.
 */
/**
 * Alias for j-cf().
 */
html {
  font-size: 1.125em; }

body {
  line-height: 1.45; }

p {
  margin-bottom: 1.3em; }

.font_small {
  font-size: 0.833em;
  line-height: 1.2; }

/* Global styles */
body {
  padding-top: 62px;
  font-family: "Domine", "Georgia", serif;
  color: #444;
  -webkit-font-smoothing: antialiased;
  -webkit-text-size-adjust: none; }

a {
  color: #027FE9;
  text-decoration: none;
  -webkit-tap-highlight-color: transparent; }
  a:hover {
    color: #00CAF8; }

.container {
  *zoom: 1;
  margin: 0 auto;
  max-width: 960px; }
  .container:before, .container:after {
    content: '';
    display: table; }
  .container:after {
    clear: both; }

@media (min-width: 700px) {
  body {
    padding-top: 0; } }
/* Header */
.header {
  background: white;
  padding: 8px 0;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 46px;
  box-shadow: 0 3px 3px rgba(68, 68, 68, 0.1); }

.logo-section {
  box-sizing: border-box;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  margin-bottom: 8px;
  height: 46px;
  padding-left: 8px; }
  .logo-section a {
    max-width: 100%;
    max-height: 100%; }
  .logo-section .logo-image {
    max-width: 100%;
    max-height: 100%; }

.nav-burger {
  position: absolute;
  top: 8px;
  right: 8px;
  font-size: 1.2em;
  background: #f8f8f8;
  padding: 12px 16px;
  line-height: 1; }
  .nav-burger:hover {
    cursor: pointer; }

.nav-primary {
  background: white;
  position: absolute;
  top: 60px;
  left: 0;
  width: 100%;
  display: none;
  z-index: 100;
  box-shadow: 0 3px 3px rgba(68, 68, 68, 0.1); }
  .nav-primary a {
    color: #5015BD;
    font-family: "Montserrat", "Helvetica Neue", "Arial", sans-serif;
    display: block;
    padding: 5px 8px;
    box-sizing: border-box;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    border-bottom: 1px solid #f8f8f8; }
    .nav-primary a:last-child {
      border: 0; }
    .nav-primary a.active {
      font-weight: 700; }
    .nav-primary a:active {
      background: #fbfbfb; }

@media (min-width: 700px) {
  .header {
    position: static; }

  .logo-section {
    float: left;
    clear: none;
    width: 25%;
    margin-left: 0;
    margin-right: 0; }

  .nav-burger {
    display: none; }

  .nav-primary {
    position: static;
    box-shadow: none;
    display: block;
    float: left;
    clear: none;
    width: 75%;
    margin-left: 0;
    margin-right: 0;
    text-align: right;
    padding-top: 0.5em; }
    .nav-primary a {
      display: inline-block;
      border: 0; } }
/* Footer */
.footer {
  padding: 20px 0;
  text-align: center;
  font-family: "Montserrat", "Helvetica Neue", "Arial", sans-serif;
  font-size: 0.9em; }
  .footer p {
    margin: 0; }

@media (min-width: 700px) {
  .footer {
    padding: 50px 0; } }
/* Learn More */
.learn-more {
  padding: 20px 8px;
  box-sizing: border-box;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  background: url(/images/pattern01.png) #f8f8f8; }
  .learn-more a {
    background: #5015BD;
    font-family: "Montserrat", "Helvetica Neue", "Arial", sans-serif;
    color: white;
    text-align: center;
    float: left;
    clear: none;
    width: 100%;
    margin-left: 0;
    margin-right: 3%;
    padding: 10px 0;
    box-sizing: border-box;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box; }
    .learn-more a:last-child {
      margin-right: 0; }
    .learn-more a:hover {
      background: #027FE9; }

@media (min-width: 700px) {
  .learn-more {
    padding: 50px 8px; }
    .learn-more a {
      float: left;
      clear: none;
      width: 65.66667%;
      margin-left: 17.16667%;
      margin-right: 3%;
      font-size: 1.44em;
      line-height: 1.2;
      padding: 20px 8px; }
      .learn-more a:last-child {
        margin-right: 0; } }
/* Slider */
.slider .slide .slide-image {
  max-width: 100%; }
.slider .slide .slide-text-section {
  text-align: center; }
.slider .slide .slide-text {
  font-weight: 700; }

/* Product banner */
.product-banner {
  background: url(/images/pattern03.png) #5015BD;
  color: white;
  padding: 20px 8px; }
  .product-banner .product-banner-title {
    font-size: 1.2em;
    line-height: 1.2;
    margin: 1.414em 0 0.5em;
    font-family: "Montserrat", "Helvetica Neue", "Arial", sans-serif;
    margin-top: 0; }
  .product-banner p:last-child {
    margin-bottom: 0; }

@media (min-width: 700px) {
  .product-banner {
    text-align: center;
    padding: 50px 0; }
    .product-banner .product-banner-title {
      font-size: 1.44em;
      line-height: 1.2; } }
/* Databricks component */
.databricks {
  padding: 20px 8px; }
  .databricks .databricks-logo .databricks-logo-image {
    max-width: 70%;
    display: block;
    margin: 10px auto; }
  .databricks .databricks-text {
    text-align: center; }
    .databricks .databricks-text p {
      margin: 0; }

@media (min-width: 700px) {
  .databricks .databricks-logo {
    float: left;
    clear: none;
    width: 31.33333%;
    margin-left: 0;
    margin-right: 3%; }
    .databricks .databricks-logo:last-child {
      margin-right: 0; }
    .databricks .databricks-logo .databricks-logo-image {
      max-width: 100%; }
  .databricks .databricks-text {
    float: left;
    clear: none;
    width: 57.08333%;
    margin-left: 8.58333%;
    margin-right: 3%;
    text-align: left;
    padding: 1.5em 0; }
    .databricks .databricks-text:last-child {
      margin-right: 0; } }
/* Getting Started section */
.getting-started {
  background: url(/images/pattern01.png) #f8f8f8;
  padding: 20px 8px; }
  .getting-started .getting-started-text {
    text-align: center; }
    .getting-started .getting-started-text p {
      margin: 0; }
  .getting-started .getting-started-title {
    font-size: 1.44em;
    line-height: 1.2;
    margin: 1.414em 0 0.5em;
    font-family: "Montserrat", "Helvetica Neue", "Arial", sans-serif;
    margin-top: 0; }
  .getting-started .getting-started-links {
    margin-top: 40px; }
    .getting-started .getting-started-links a {
      font-family: "Montserrat", "Helvetica Neue", "Arial", sans-serif;
      text-align: center;
      display: block;
      padding: 8px;
      box-sizing: border-box;
      -webkit-box-sizing: border-box;
      -moz-box-sizing: border-box;
      background: #5015BD;
      color: white;
      margin-bottom: 10px; }

@media (min-width: 700px) {
  .getting-started {
    padding: 50px 8px; }
    .getting-started .getting-started-title {
      font-size: 1.728em;
      line-height: 1.2; }
    .getting-started .getting-started-links a {
      float: left;
      clear: none;
      width: 31.33333%;
      margin-left: 0;
      margin-right: 3%; }
      .getting-started .getting-started-links a:nth-of-type(3n) {
        margin-right: 0;
        float: right; }
      .getting-started .getting-started-links a:nth-of-type(3n + 1) {
        clear: both; } }
